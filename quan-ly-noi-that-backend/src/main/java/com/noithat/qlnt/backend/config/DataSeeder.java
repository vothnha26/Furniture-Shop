package com.noithat.qlnt.backend.config;

import com.noithat.qlnt.backend.entity.*;
import com.noithat.qlnt.backend.repository.*;
import org.springframework.boot.CommandLineRunner;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.math.BigDecimal;
import java.time.LocalDateTime;

@Configuration
public class DataSeeder {

    @Bean
        CommandLineRunner initData(HangThanhVienRepository hangRepo,
                                                           TaiKhoanRepository taiKhoanRepo,
                                                           KhachHangRepository khachHangRepo,
                                                           VoucherRepository voucherRepo,
                                                           VoucherHangThanhVienRepository voucherHangRepo,
                                                           SanPhamRepository sanPhamRepo,
                                                           BienTheSanPhamRepository bienTheRepo,
                                                           BoSuuTapRepository boSuuTapRepo,
                                                           VaiTroRepository vaiTroRepo,
                                                           DonHangRepository donHangRepo,
                                                           ChiTietDonHangRepository chiTietDonHangRepo,
                                                           ChuongTrinhGiamGiaRepository chuongTrinhRepo,
                                                           BienTheGiamGiaRepository bienTheGiamGiaRepo,
                                                           DichVuRepository dichVuRepo,
                                                           DonHangDichVuRepository donHangDichVuRepo,
                                                           DanhMucRepository danhMucRepo,
                                                           NhaCungCapRepository nhaCungCapRepo,
                                                           ThuocTinhRepository thuocTinhRepo,
                                                           GiaTriThuocTinhRepository giaTriRepo,
                                                           BienTheGiaTriThuocTinhRepository bienTheGiaTriRepo,
                                                           GiaoDichThanhToanRepository giaoDichRepo,
                                                           LichSuTonKhoRepository lichSuTonKhoRepo,
                                                           LichSuTrangThaiDonHangRepository lichSuTrangThaiRepo,
                                                           LichSuDiemThuongRepository lichSuDiemThuongRepo,
                                                           KiemKeKhoRepository kiemKeKhoRepo,
                                                           KiemKeChiTietRepository kiemKeChiTietRepo,
                                                           CanhBaoTonKhoRepository canhBaoTonKhoRepo,
                                                           HoaDonRepository hoaDonRepo,
                                                           NhanVienRepository nhanVienRepo,
                                                           ThongTinGiaoHangRepository thongTinGiaoHangRepo,
                                                           TrangThaiDonHangRepository trangThaiDonHangRepo) {
        return args -> {

            // ================== D·ªÆ LI·ªÜU N·ªÄN T·∫¢NG ==================
            System.out.println("üéØ B·∫Øt ƒë·∫ßu seed d·ªØ li·ªáu...");
            
            // T·∫°o h·∫°ng th√†nh vi√™n VIP (theo th·ª© t·ª± t·ª´ th·∫•p ƒë·∫øn cao)
            HangThanhVien silver = taoHangThanhVien("Silver", 1000, new BigDecimal("5000000"), new BigDecimal("5.0"),
                "H·∫°ng th√†nh vi√™n b·∫°c", "#C0C0C0", "[\"Gi·∫£m gi√° 5%\"]", "IoMedal", 1);
            silver = hangRepo.save(silver);

            HangThanhVien gold = taoHangThanhVien("Gold", 5000, new BigDecimal("15000000"), new BigDecimal("10.0"),
                "H·∫°ng th√†nh vi√™n v√†ng", "#FFD700", "[\"Gi·∫£m gi√° 10%\", \"∆Øu ti√™n giao h√†ng\"]", "IoStar", 2);
            gold = hangRepo.save(gold);

            HangThanhVien platinum = taoHangThanhVien("Platinum", 15000, new BigDecimal("30000000"), new BigDecimal("15.0"),
                "H·∫°ng th√†nh vi√™n b·∫°ch kim", "#E5E4E2", "[\"Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn\", \"Gi·∫£m gi√° 15%\", \"∆Øu ti√™n giao h√†ng\"]", "IoTrophy", 3);
            platinum = hangRepo.save(platinum);

            HangThanhVien diamond = taoHangThanhVien("Diamond", 30000, new BigDecimal("50000000"), new BigDecimal("20.0"),
                "H·∫°ng th√†nh vi√™n kim c∆∞∆°ng", "#B9F2FF", "[\"Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn\", \"Gi·∫£m gi√° 20%\", \"∆Øu ti√™n giao h√†ng\", \"T∆∞ v·∫•n ri√™ng\"]", "IoDiamond", 4);
            diamond = hangRepo.save(diamond);

            // Bronze cho kh√°ch h√†ng m·ªõi
            HangThanhVien bronze = taoHangThanhVien("Bronze", 0, new BigDecimal("0"), new BigDecimal("3.0"),
                "H·∫°ng th√†nh vi√™n c∆° b·∫£n", "#CD7F32", "[\"Gi·∫£m gi√° 3%\", \"T√≠ch ƒëi·ªÉm th∆∞·ªüng\"]", "IoMedal", 0);
            bronze = hangRepo.save(bronze);

            // T·∫°o vai tr√≤
            VaiTro vaiTro = vaiTroRepo.save(new VaiTro(null, "USER"));

            // T·∫°o t√†i kho·∫£n
            TaiKhoan t1 = taiKhoanRepo.save(new TaiKhoan(null, "user1", "password", "user1@example.com", vaiTro));
            TaiKhoan t2 = taiKhoanRepo.save(new TaiKhoan(null, "user2", "password", "user2@example.com", vaiTro));
            TaiKhoan t3 = taiKhoanRepo.save(new TaiKhoan(null, "user3", "password", "user3@example.com", vaiTro));

            // T·∫°o kh√°ch h√†ng
            KhachHang k1 = khachHangRepo.save(taoKhachHang(t1, "Nguy·ªÖn VƒÉn An", "an.nguyen@example.com", "0901112221", "123 ƒê∆∞·ªùng L√™ L·ª£i, Qu·∫≠n 1, TP.HCM", 800, bronze));
            KhachHang k2 = khachHangRepo.save(taoKhachHang(t2, "Tr·∫ßn Th·ªã B√¨nh", "binh.tran@example.com", "0903334442", "456 ƒê∆∞·ªùng Nguy·ªÖn Hu·ªá, Qu·∫≠n 1, TP.HCM", 1500, silver));
            KhachHang k3 = khachHangRepo.save(taoKhachHang(t3, "L√™ VƒÉn C∆∞·ªùng", "cuong.le@example.com", "0907778889", "789 ƒê∆∞·ªùng Hai B√† Tr∆∞ng, Qu·∫≠n 3, TP.HCM", 6200, gold));

            Voucher v1 = new Voucher();
            v1.setTenVoucher("SALE100K");
            v1.setMaCode("SALE100K");
            v1.setLoaiGiamGia("FIXED");
            v1.setGiaTriGiam(BigDecimal.valueOf(100000));
            v1.setNgayBatDau(LocalDateTime.now().minusDays(10));
            v1.setNgayKetThuc(LocalDateTime.now().plusYears(1));
            v1.setTrangThai(true);
            v1 = voucherRepo.save(v1);

            SanPham sp1 = sanPhamRepo.save(new SanPham(null, "Gh·∫ø Sofa BƒÉng D√†i",
                    "Gh·∫ø sofa hi·ªán ƒë·∫°i cho ph√≤ng kh√°ch.", 20, 5, 6, 60, null, null, null));

            BienTheSanPham bt1 = new BienTheSanPham();
            bt1.setSanPham(sp1);
            bt1.setSku("SF-BANG-XAM");
            bt1.setGiaBan(BigDecimal.valueOf(4500000));
            bt1.setSoLuongTon(50);
            bt1 = bienTheRepo.save(bt1);

            BienTheSanPham bt2 = new BienTheSanPham();
            bt2.setSanPham(sp1);
            bt2.setSku("SF-BANG-KEM");
            bt2.setGiaBan(BigDecimal.valueOf(4650000));
            bt2.setSoLuongTon(30);
            bt2 = bienTheRepo.save(bt2);

            SanPham sp2 = sanPhamRepo.save(new SanPham(null, "B√†n Tr√† G·ªó S·ªìi",
                    "B√†n tr√† nh·ªè g·ªçn, thi·∫øt k·∫ø tinh t·∫ø.", 40, 6, 8, 400, null, null, null));

            BienTheSanPham bt3 = new BienTheSanPham();
            bt3.setSanPham(sp2);
            bt3.setSku("BT-SOI-TRON");
            bt3.setGiaBan(BigDecimal.valueOf(1200000));
            bt3.setSoLuongTon(100);
            bt3 = bienTheRepo.save(bt3);

            // ================== T·∫†O ƒê∆†N H√ÄNG ==================

            // ===== ƒê∆†N H√ÄNG 1 =====
            DonHang donHang1 = new DonHang();
            donHang1.setKhachHang(k1);
            donHang1.setNgayDatHang(LocalDateTime.now().minusDays(1));
            donHang1.setTrangThai("Ho√†n th√†nh");
            donHang1.setPhuongThucThanhToan("COD"); // üü¢ B·∫ÆT BU·ªòC TH√äM
            donHang1.setGhiChu("Giao h√†ng v√†o gi·ªù h√†nh ch√≠nh.");
            donHang1.setVoucher(v1);

            BigDecimal tongTienGoc1 = bt1.getGiaBan().add(bt3.getGiaBan().multiply(BigDecimal.valueOf(2)));
            donHang1.setTongTienGoc(tongTienGoc1);
            donHang1.setGiamGiaVoucher(v1.getGiaTriGiam());
            donHang1.setThanhTien(tongTienGoc1.subtract(v1.getGiaTriGiam()));
            donHang1.setChiPhiDichVu(BigDecimal.ZERO);

            DonHang savedDonHang1 = donHangRepo.save(donHang1);

            ChiTietDonHang.ChiTietDonHangId id1 = new ChiTietDonHang.ChiTietDonHangId(savedDonHang1.getMaDonHang(), bt1.getMaBienThe());
            ChiTietDonHang ct1_1 = new ChiTietDonHang(id1, savedDonHang1, bt1, 1, bt1.getGiaBan(), bt1.getGiaBan());
            chiTietDonHangRepo.save(ct1_1);

            ChiTietDonHang.ChiTietDonHangId id2 = new ChiTietDonHang.ChiTietDonHangId(savedDonHang1.getMaDonHang(), bt3.getMaBienThe());
            ChiTietDonHang ct1_2 = new ChiTietDonHang(id2, savedDonHang1, bt3, 2, bt3.getGiaBan(), bt3.getGiaBan());
            chiTietDonHangRepo.save(ct1_2);

            // ===== ƒê∆†N H√ÄNG 2 =====
            DonHang donHang2 = new DonHang();
            donHang2.setKhachHang(k2);
            donHang2.setNgayDatHang(LocalDateTime.now());
            donHang2.setTrangThai("Ch·ªù x·ª≠ l√Ω");
            donHang2.setPhuongThucThanhToan("Chuy·ªÉn kho·∫£n"); // üü¢ B·∫ÆT BU·ªòC TH√äM
            donHang2.setTongTienGoc(bt2.getGiaBan());
            donHang2.setThanhTien(bt2.getGiaBan());
            donHang2.setChiPhiDichVu(BigDecimal.ZERO);

            DonHang savedDonHang2 = donHangRepo.save(donHang2);

            ChiTietDonHang.ChiTietDonHangId id3 = new ChiTietDonHang.ChiTietDonHangId(savedDonHang2.getMaDonHang(), bt2.getMaBienThe());
            ChiTietDonHang ct2_1 = new ChiTietDonHang(id3, savedDonHang2, bt2, 1, bt2.getGiaBan(), bt2.getGiaBan());
            chiTietDonHangRepo.save(ct2_1);

            // ===== ƒê∆†N H√ÄNG 3 =====
            DonHang donHang3 = new DonHang();
            donHang3.setKhachHang(k1);
            donHang3.setNgayDatHang(LocalDateTime.now().minusHours(2));
            donHang3.setTrangThai("ƒêang giao");
            donHang3.setPhuongThucThanhToan("COD"); // üü¢ B·∫ÆT BU·ªòC TH√äM
            donHang3.setTongTienGoc(bt3.getGiaBan());
            donHang3.setThanhTien(bt3.getGiaBan());
            donHang3.setChiPhiDichVu(BigDecimal.ZERO);

            DonHang savedDonHang3 = donHangRepo.save(donHang3);

            ChiTietDonHang.ChiTietDonHangId id4 = new ChiTietDonHang.ChiTietDonHangId(savedDonHang3.getMaDonHang(), bt3.getMaBienThe());
            ChiTietDonHang ct3_1 = new ChiTietDonHang(id4, savedDonHang3, bt3, 1, bt3.getGiaBan(), bt3.getGiaBan());
            chiTietDonHangRepo.save(ct3_1);

            // ================== D·ªäCH V·ª§ ==================
            dichVuRepo.save(new DichVu(null, "V·∫≠n chuy·ªÉn ti√™u chu·∫©n", "Giao h√†ng trong v√≤ng 3-5 ng√†y l√†m vi·ªác", BigDecimal.valueOf(50000)));
            DichVu dv2 = dichVuRepo.save(new DichVu(null, "V·∫≠n chuy·ªÉn nhanh", "Giao h√†ng trong v√≤ng 24h", BigDecimal.valueOf(150000)));
            DichVu dv3 = dichVuRepo.save(new DichVu(null, "L·∫Øp ƒë·∫∑t t·∫°i nh√†", "D·ªãch v·ª• l·∫Øp ƒë·∫∑t v√† s·∫Øp x·∫øp n·ªôi th·∫•t", BigDecimal.valueOf(200000)));
            dichVuRepo.save(new DichVu(null, "B·∫£o h√†nh m·ªü r·ªông 2 nƒÉm", "Gia h·∫°n th√™m 2 nƒÉm b·∫£o h√†nh", BigDecimal.valueOf(500000)));

            // Th√™m d·ªãch v·ª• v√†o ƒë∆°n h√†ng 1 (V·∫≠n chuy·ªÉn nhanh + L·∫Øp ƒë·∫∑t)
            DonHangDichVu dhdv1 = new DonHangDichVu();
            DonHangDichVu.DonHangDichVuId dhvId1 = new DonHangDichVu.DonHangDichVuId(savedDonHang1.getMaDonHang(), dv2.getMaDichVu());
            dhdv1.setId(dhvId1);
            dhdv1.setDonHang(savedDonHang1);
            dhdv1.setDichVu(dv2);
            dhdv1.setSoLuong(1);
            donHangDichVuRepo.save(dhdv1);

            DonHangDichVu dhdv2 = new DonHangDichVu();
            DonHangDichVu.DonHangDichVuId dhvId2 = new DonHangDichVu.DonHangDichVuId(savedDonHang1.getMaDonHang(), dv3.getMaDichVu());
            dhdv2.setId(dhvId2);
            dhdv2.setDonHang(savedDonHang1);
            dhdv2.setDichVu(dv3);
            dhdv2.setSoLuong(1);
            donHangDichVuRepo.save(dhdv2);

            // C·∫≠p nh·∫≠t l·∫°i chi ph√≠ d·ªãch v·ª• v√† th√†nh ti·ªÅn cho ƒë∆°n h√†ng 1
            BigDecimal chiPhiDV1 = dv2.getChiPhi().add(dv3.getChiPhi()); // 150k + 200k = 350k
            savedDonHang1.setChiPhiDichVu(chiPhiDV1);
            savedDonHang1.setThanhTien(savedDonHang1.getTongTienGoc().add(chiPhiDV1));
            donHangRepo.save(savedDonHang1);

            // ================== D·ªÆ LI·ªÜU KHUY·∫æN M√ÉI ==================

            // ================== B·ªò S∆ØU T·∫¨P ==================
            BoSuuTap bst1 = new BoSuuTap();
            bst1.setTenBoSuuTap("B·ªô s∆∞u t·∫≠p Ph√≤ng Kh√°ch");
            bst1.setMoTa("B·ªô s∆∞u t·∫≠p d√†nh cho ph√≤ng kh√°ch");
            bst1 = boSuuTapRepo.save(bst1);

            BoSuuTap bst2 = new BoSuuTap();
            bst2.setTenBoSuuTap("B·ªô s∆∞u t·∫≠p Ph√≤ng ƒÇn");
            bst2.setMoTa("B·ªô s∆∞u t·∫≠p d√†nh cho ph√≤ng ƒÉn");
            bst2 = boSuuTapRepo.save(bst2);

            // G√°n s·∫£n ph·∫©m v√†o b·ªô s∆∞u t·∫≠p
            bst1.getSanPhams().add(sp1);
            bst1.getSanPhams().add(sp2);
            boSuuTapRepo.save(bst1);

            // VOUCHER 1: Gi·∫£m ph·∫ßn trƒÉm cho m·ªçi ng∆∞·ªùi
            Voucher voucher1 = new Voucher();
            voucher1.setTenVoucher("TETALE2025");
            voucher1.setMaCode("TETALE2025");
            voucher1.setLoaiGiamGia("PERCENTAGE");
            voucher1.setGiaTriGiam(BigDecimal.valueOf(15));
            voucher1.setNgayBatDau(LocalDateTime.of(2025, 1, 15, 0, 0));
            voucher1.setNgayKetThuc(LocalDateTime.of(2025, 2, 15, 23, 59));
            voucher1.setTrangThai(true);
            voucherRepo.save(voucher1);

            // VOUCHER 2: Gi·∫£m c·ªë ƒë·ªãnh cho m·ªçi ng∆∞·ªùi
            Voucher voucher2 = new Voucher();
            voucher2.setTenVoucher("FREESHIP100K");
            voucher2.setMaCode("FREESHIP100K");
            voucher2.setLoaiGiamGia("FIXED");
            voucher2.setGiaTriGiam(BigDecimal.valueOf(100000));
            voucher2.setNgayBatDau(LocalDateTime.now().minusDays(1));
            voucher2.setNgayKetThuc(LocalDateTime.now().plusMonths(1));
            voucher2.setTrangThai(true);
            voucherRepo.save(voucher2);

            // VOUCHER 3: Gi·∫£m cho h·∫°ng VIP (Silver v√† Gold)
            Voucher voucher3 = new Voucher();
            voucher3.setTenVoucher("VIP2025");
            voucher3.setMaCode("VIP2025");
            voucher3.setLoaiGiamGia("FIXED");
            voucher3.setGiaTriGiam(BigDecimal.valueOf(500000));
            voucher3.setNgayBatDau(LocalDateTime.of(2025, 1, 1, 0, 0));
            voucher3.setNgayKetThuc(LocalDateTime.of(2025, 12, 31, 23, 59));
            voucher3.setTrangThai(false);
            voucher3.setApDungChoMoiNguoi(false);
            voucher3 = voucherRepo.save(voucher3);
            
            // G√°n voucher cho h·∫°ng th√†nh vi√™n Silver v√† Gold
            voucherHangRepo.save(new VoucherHangThanhVien(
                    new VoucherHangThanhVien.VoucherHangThanhVienId(voucher3.getMaVoucher(), silver.getMaHangThanhVien()),
                    voucher3, silver
            ));
            voucherHangRepo.save(new VoucherHangThanhVien(
                    new VoucherHangThanhVien.VoucherHangThanhVienId(voucher3.getMaVoucher(), gold.getMaHangThanhVien()),
                    voucher3, gold
            ));

            // CH∆Ø∆†NG TR√åNH GI·∫¢M GI√Å 1: Flash Sale Cu·ªëi Tu·∫ßn
            ChuongTrinhGiamGia flashSale = new ChuongTrinhGiamGia();
            flashSale.setTenChuongTrinh("Flash Sale Cu·ªëi Tu·∫ßn");
            flashSale.setNgayBatDau(LocalDateTime.now().minusDays(1));
            flashSale.setNgayKetThuc(LocalDateTime.now().plusDays(2));
            flashSale = chuongTrinhRepo.save(flashSale);

            // Th√™m bi·∫øn th·ªÉ v√†o ch∆∞∆°ng tr√¨nh gi·∫£m gi√°
            BienTheGiamGia btg1 = new BienTheGiamGia();
            BienTheGiamGia.BienTheGiamGiaId btgId1 = new BienTheGiamGia.BienTheGiamGiaId(
                    flashSale.getMaChuongTrinhGiamGia(), bt1.getMaBienThe()
            );
            btg1.setId(btgId1);
            btg1.setChuongTrinhGiamGia(flashSale);
            btg1.setBienTheSanPham(bt1);
            btg1.setGiaSauGiam(BigDecimal.valueOf(3500000)); // Gi·∫£m t·ª´ 4.5tr xu·ªëng 3.5tr
            bienTheGiamGiaRepo.save(btg1);

            BienTheGiamGia btg2 = new BienTheGiamGia();
            BienTheGiamGia.BienTheGiamGiaId btgId2 = new BienTheGiamGia.BienTheGiamGiaId(
                    flashSale.getMaChuongTrinhGiamGia(), bt2.getMaBienThe()
            );
            btg2.setId(btgId2);
            btg2.setChuongTrinhGiamGia(flashSale);
            btg2.setBienTheSanPham(bt2);
            btg2.setGiaSauGiam(BigDecimal.valueOf(3700000)); // Gi·∫£m t·ª´ 4.65tr xu·ªëng 3.7tr
            bienTheGiamGiaRepo.save(btg2);

            // CH∆Ø∆†NG TR√åNH GI·∫¢M GI√Å 2: Khuy·∫øn M√£i T·∫øt
            ChuongTrinhGiamGia khuyenMaiTet = new ChuongTrinhGiamGia();
            khuyenMaiTet.setTenChuongTrinh("Khuy·∫øn M√£i T·∫øt 2025");
            khuyenMaiTet.setNgayBatDau(LocalDateTime.of(2025, 1, 15, 0, 0));
            khuyenMaiTet.setNgayKetThuc(LocalDateTime.of(2025, 2, 15, 23, 59));
            khuyenMaiTet = chuongTrinhRepo.save(khuyenMaiTet);

            BienTheGiamGia btg3 = new BienTheGiamGia();
            BienTheGiamGia.BienTheGiamGiaId btgId3 = new BienTheGiamGia.BienTheGiamGiaId(
                    khuyenMaiTet.getMaChuongTrinhGiamGia(), bt3.getMaBienThe()
            );
            btg3.setId(btgId3);
            btg3.setChuongTrinhGiamGia(khuyenMaiTet);
            btg3.setBienTheSanPham(bt3);
            btg3.setGiaSauGiam(BigDecimal.valueOf(1000000)); // Gi·∫£m t·ª´ 1.2tr xu·ªëng 1tr
            bienTheGiamGiaRepo.save(btg3);

            // ===== T·∫†O ƒê∆†N H√ÄNG M·∫™U =====
            // ƒê∆°n h√†ng 1: Kh√°ch h√†ng Gold (k3) mua Gh·∫ø Sofa v·ªõi voucher VIP
            Voucher voucherVip = voucherRepo.findByMaCode("VIP2025")
                    .orElseThrow(() -> new RuntimeException("Kh√¥ng t√¨m th·∫•y voucher VIP2025"));
            
            DonHang dh1 = new DonHang();
            dh1.setKhachHang(k3);
            dh1.setVoucher(voucherVip);
            dh1.setTrangThai("ƒêang x·ª≠ l√Ω");
            dh1.setNgayDatHang(LocalDateTime.now());
            dh1.setPhuongThucThanhToan("Chuy·ªÉn kho·∫£n");
            dh1.setTongTienGoc(BigDecimal.valueOf(2500000));
            dh1.setGiamGiaVoucher(BigDecimal.valueOf(500000)); // VIP2025 gi·∫£m 500k
            dh1.setThanhTien(BigDecimal.valueOf(2000000)); // 2.5tr - 500k = 2tr
            donHangRepo.save(dh1);

            ChiTietDonHang ctdh1 = new ChiTietDonHang();
            ChiTietDonHang.ChiTietDonHangId ctdhId1 = new ChiTietDonHang.ChiTietDonHangId(
                    dh1.getMaDonHang(), bt1.getMaBienThe()
            );
            ctdh1.setId(ctdhId1);
            ctdh1.setDonHang(dh1);
            ctdh1.setBienThe(bt1); // Gh·∫ø Sofa m√†u ƒê·ªè
            ctdh1.setSoLuong(1);
            ctdh1.setDonGiaGoc(BigDecimal.valueOf(2500000));
            ctdh1.setDonGiaThucTe(BigDecimal.valueOf(2500000));
            chiTietDonHangRepo.save(ctdh1);

            // ================== NH√Ä CUNG C·∫§P ==================
            NhaCungCap ncc1 = new NhaCungCap();
            ncc1.setTenNhaCungCap("C√¥ng ty N·ªôi Th·∫•t A");
            nhaCungCapRepo.save(ncc1);

            NhaCungCap ncc2 = new NhaCungCap();
            ncc2.setTenNhaCungCap("C√¥ng ty ƒê·ªì G·ªó B");
            nhaCungCapRepo.save(ncc2);

            // ================== THU·ªòC T√çNH & GI√Å TR·ªä ==================
            ThuocTinh color = thuocTinhRepo.save(new ThuocTinh(null, "M√†u s·∫Øc"));
            ThuocTinh material = thuocTinhRepo.save(new ThuocTinh(null, "Ch·∫•t li·ªáu"));

            GiaTriThuocTinh gt1 = new GiaTriThuocTinh();
            gt1.setThuocTinh(color);
            gt1.setGiaTri("X√°m");
            gt1 = giaTriRepo.save(gt1);

            GiaTriThuocTinh gt2 = new GiaTriThuocTinh();
            gt2.setThuocTinh(color);
            gt2.setGiaTri("Kem");
            gt2 = giaTriRepo.save(gt2);

            GiaTriThuocTinh gt3 = new GiaTriThuocTinh();
            gt3.setThuocTinh(material);
            gt3.setGiaTri("G·ªó s·ªìi");
            gt3 = giaTriRepo.save(gt3);

            // Map attribute values to variants (BienThe)
            BienTheGiaTriThuocTinh bgt1 = new BienTheGiaTriThuocTinh();
            bgt1.setBienTheSanPham(bt1);
            bgt1.setGiaTriThuocTinh(gt1);
            bienTheGiaTriRepo.save(bgt1);

            BienTheGiaTriThuocTinh bgt2 = new BienTheGiaTriThuocTinh();
            bgt2.setBienTheSanPham(bt2);
            bgt2.setGiaTriThuocTinh(gt2);
            bienTheGiaTriRepo.save(bgt2);

            BienTheGiaTriThuocTinh bgt3 = new BienTheGiaTriThuocTinh();
            bgt3.setBienTheSanPham(bt3);
            bgt3.setGiaTriThuocTinh(gt3);
            bienTheGiaTriRepo.save(bgt3);

            // ================== GIAO D·ªäCH THANH TO√ÅN ==================
            GiaoDichThanhToan gd1 = new GiaoDichThanhToan();
            gd1.setDonHang(savedDonHang1);
            gd1.setSoTien(savedDonHang1.getThanhTien());
            gd1.setPhuongThuc("COD");
            gd1.setNgayGiaoDich(LocalDateTime.now().minusDays(1));
            // required non-null column
            gd1.setTrangThai("COMPLETED");
            giaoDichRepo.save(gd1);

            // ================== L·ªäCH S·ª¨ T·ªíN KHO ==================
            LichSuTonKho ls1 = new LichSuTonKho();
            ls1.setBienTheSanPham(bt1);
            ls1.setSoLuongTruoc(bt1.getSoLuongTon());
            ls1.setSoLuongThayDoi(-1);
            ls1.setSoLuongSau(bt1.getSoLuongTon() - 1);
            ls1.setLyDo("B√°n h√†ng");
            ls1.setLoaiGiaoDich("BAN_HANG");
            // reference order id as maThamChieu
            ls1.setMaThamChieu(savedDonHang1.getMaDonHang() != null ? savedDonHang1.getMaDonHang().toString() : null);
            ls1.setNguoiThucHien("system");
            ls1.setThoiGianThucHien(LocalDateTime.now().minusDays(1));
            lichSuTonKhoRepo.save(ls1);

            // ================== L·ªäCH S·ª¨ TRANG TH√ÅI ƒê∆†N H√ÄNG ==================
            LichSuTrangThaiDonHang lstd1 = new LichSuTrangThaiDonHang();
            lstd1.setDonHang(savedDonHang1);
            lstd1.setTrangThaiCu("Ch·ªù l·∫•y h√†ng");
            lstd1.setTrangThaiMoi("Ho√†n th√†nh");
            lstd1.setNguoiThayDoi("system");
            lstd1.setThoiGianThayDoi(LocalDateTime.now().minusHours(2));
            lichSuTrangThaiRepo.save(lstd1);

            // ================== L·ªäCH S·ª¨ ƒêI·ªÇM TH∆Ø·ªûNG ==================
            LichSuDiemThuong lsd1 = new LichSuDiemThuong();
            lsd1.setKhachHang(k1);
            lsd1.setDiemThayDoi(50);
            lsd1.setLyDo("Mua h√†ng");
            lsd1.setNgayGhiNhan(LocalDateTime.now().minusDays(1));
            lichSuDiemThuongRepo.save(lsd1);

            // ================== KI·ªÇM K√ä M·∫™U ==================
            KiemKeKho kk1 = new KiemKeKho();
            kk1.setTenKiemKe("Ki·ªÉm k√™ th·ª≠");
            kk1.setNguoiTao("system");
            kk1.setTrangThai(KiemKeKho.TrangThaiKiemKe.DANG_CHUAN_BI);
            kk1 = kiemKeKhoRepo.save(kk1);

            KiemKeChiTiet kct1 = new KiemKeChiTiet();
            kct1.setKiemKeKho(kk1);
            kct1.setBienTheSanPham(bt1);
            kct1.setSoLuongHeThong(bt1.getSoLuongTon()); // üü¢ B·∫ÆT BU·ªòC: S·ªë l∆∞·ª£ng theo h·ªá th·ªëng
            kct1.setSoLuongThucTe(bt1.getSoLuongTon()); // S·ªë l∆∞·ª£ng th·ª±c t·∫ø
            kiemKeChiTietRepo.save(kct1);

            // ================== B·ªî SUNG D·ªÆ LI·ªÜU CHO C√ÅC B·∫¢NG THI·∫æU ==================
            // Danh m·ª•c
            DanhMuc dm1 = new DanhMuc();
            dm1.setTenDanhMuc("Ph√≤ng Kh√°ch");
            dm1 = danhMucRepo.save(dm1);

            DanhMuc dm2 = new DanhMuc();
            dm2.setTenDanhMuc("Ph√≤ng ƒÇn");
            dm2 = danhMucRepo.save(dm2);

            // G√°n danh m·ª•c cho s·∫£n ph·∫©m n·∫øu c·∫ßn
            sp1.setDanhMuc(dm1);
            sp2.setDanhMuc(dm2);
            sanPhamRepo.save(sp1);
            sanPhamRepo.save(sp2);

            // Nh√¢n vi√™n m·∫´u (chiÃâ set t√™n & ch·ª©c v·ª• v√¨ entity ch·ªâ c√≥ nh·ªØng tr∆∞·ªùng ƒë√≥)
            // T·∫°o t√†i kho·∫£n ri√™ng cho nh√¢n vi√™n v√¨ c·ªôt MaTaiKhoan kh√¥ng ƒë∆∞·ª£c NULL
            TaiKhoan nvAccount = taiKhoanRepo.save(new TaiKhoan(null, "nvquan", "password", "nv.quan@example.com", vaiTro));

            NhanVien nv1 = new NhanVien();
            nv1.setTaiKhoan(nvAccount);
            nv1.setHoTen("Nguy·ªÖn VƒÉn Qu·∫£n");
            nv1.setChucVu("Qu·∫£n l√Ω kho");
            nv1 = nhanVienRepo.save(nv1);

            // Th√¥ng tin giao h√†ng cho ƒë∆°n h√†ng m·∫´u (savedDonHang1)
            ThongTinGiaoHang ttgh1 = new ThongTinGiaoHang();
            ttgh1.setDonHang(savedDonHang1);
            ttgh1.setDonViVanChuyen("V·∫≠n chuy·ªÉn nhanh");
            ttgh1.setMaVanDon("VD-" + (savedDonHang1.getMaDonHang() != null ? savedDonHang1.getMaDonHang() : "000"));
            ttgh1.setPhiVanChuyen(BigDecimal.valueOf(150000));
            ttgh1.setTrangThaiGiaoHang("ƒê√£ giao");
            thongTinGiaoHangRepo.save(ttgh1);

            // H√≥a ƒë∆°n m·∫´u li√™n k·∫øt v·ªõi ƒë∆°n h√†ng
            HoaDon hoaDon1 = new HoaDon();
            hoaDon1.setDonHang(savedDonHang1);
            hoaDon1.setSoHoaDon("HD-" + (savedDonHang1.getMaDonHang() != null ? savedDonHang1.getMaDonHang() : "000"));
            hoaDon1.setNgayXuat(LocalDateTime.now().minusDays(1));
            hoaDon1.setNhanVienXuat(nv1);
            hoaDon1.setTongTienThanhToan(savedDonHang1.getThanhTien());
            hoaDonRepo.save(hoaDon1);

            // C·∫£nh b√°o t·ªìn kho m·∫´u
            CanhBaoTonKho cb1 = new CanhBaoTonKho();
            cb1.setBienTheSanPham(bt3);
            cb1.setMucCanhBao(10);
            cb1.setGhiChu("T·ªìn kho th·∫•p, c·∫ßn ƒë·∫∑t th√™m");
            canhBaoTonKhoRepo.save(cb1);

            // Tr·∫°ng th√°i ƒë∆°n h√†ng (b·ªï sung d·ªØ li·ªáu tham kh·∫£o)
            TrangThaiDonHang ts1 = new TrangThaiDonHang();
            ts1.setTenTrangThai("Ch·ªù x·ª≠ l√Ω");
            trangThaiDonHangRepo.save(ts1);

            TrangThaiDonHang ts2 = new TrangThaiDonHang();
            ts2.setTenTrangThai("ƒêang giao");
            trangThaiDonHangRepo.save(ts2);

            System.out.println("‚úÖ Seed d·ªØ li·ªáu th√†nh c√¥ng!");
        };
    }

    /**
     * Helper method ƒë·ªÉ t·∫°o h·∫°ng th√†nh vi√™n v·ªõi ƒë·∫ßy ƒë·ªß th√¥ng tin
     */
    private HangThanhVien taoHangThanhVien(String tenHang, Integer diemToiThieu, 
            BigDecimal soTienToiThieu, BigDecimal phanTramGiamGia, String moTa, 
            String mauSac, String uuDai, String icon, Integer thuTu) {
        HangThanhVien hang = new HangThanhVien();
        hang.setTenHang(tenHang);
        hang.setDiemToiThieu(diemToiThieu);
        hang.setSoTienToiThieu(soTienToiThieu);
        hang.setPhanTramGiamGia(phanTramGiamGia);
        hang.setMoTa(moTa);
        hang.setMauSac(mauSac);
        hang.setUuDai(uuDai);
        hang.setIcon(icon);
        hang.setTrangThai(true);
        hang.setThuTu(thuTu);
        return hang;
    }

    /**
     * Helper method ƒë·ªÉ t·∫°o kh√°ch h√†ng v·ªõi ƒë·∫ßy ƒë·ªß th√¥ng tin
     */
    private KhachHang taoKhachHang(TaiKhoan taiKhoan, String hoTen, String email, String soDienThoai, 
                                  String diaChi, Integer diemThuong, HangThanhVien hangThanhVien) {
        KhachHang khachHang = new KhachHang();
        khachHang.setTaiKhoan(taiKhoan);
        khachHang.setHoTen(hoTen);
        khachHang.setEmail(email);
        khachHang.setSoDienThoai(soDienThoai);
        khachHang.setDiaChi(diaChi);
        khachHang.setDiemThuong(diemThuong);
        khachHang.setHangThanhVien(hangThanhVien);
        khachHang.setNgayThamGia(java.time.LocalDate.now());
        khachHang.setTrangThaiVip("active");
        return khachHang;
    }
}
